// Generated by CoffeeScript 2.7.0
var ass, echo;

echo = console.log;

ass = function(a, b) {
  if (_.isEqual(a, b)) {
    return;
  }
  echo('Assertion failed: (open the Assertion below to find the failing assertion)');
  echo('  expect', JSON.stringify(a));
  echo('  actual', JSON.stringify(b));
  return console.assert(false); // can be used to track the assert
};

ass(7, 3 + 4);

import {
  expand
} from './tournament.js';

ass([[[1, 2], [3, 4]], [[2, 1], [4, 3]], [[1, 4], [2, 3]], [[4, 1], [3, 2]]], expand([[[1, 2], [3, 4]], [[1, 4], [2, 3]]]));

import {
  findNumberOfDecimals
} from './tournament.js';

ass(0, findNumberOfDecimals([1200, 1200]));

ass(0, findNumberOfDecimals([1200, 1201]));

ass(0, findNumberOfDecimals([1200.23, 1200.23]));

ass(1, findNumberOfDecimals([1200.23, 1200.3]));

ass(1, findNumberOfDecimals([1200.23, 1200.3]));

ass(3, findNumberOfDecimals([1200.23, 1200.2345]));

ass(0, findNumberOfDecimals([1200.12345, 1200.12345]));

import {
  longForm
} from './tournament.js';

import {
  // ass [
  // 	[ 0,11,'w','F']
  // 	[ 1,10,'w','0']
  // 	[ 2, 9,'w','r']
  // 	[ 3, 8,'w','1']
  // 	[ 4, 7,'w','0']
  // 	[ 5, 6,'w','r']
  // 	[ 6, 5,'b','r']
  // 	[ 7, 4,'b','1']
  // 	[ 8, 3,'b','0']
  // 	[ 9, 2,'b','r']
  // 	[10, 1,'b','1']
  // 	[11, 0,'b','1']
  // ], longForm [[1,10], [2,9], [3,8], [4,7], [5,6], [0,11]], "0r10r"
  // ass [[1,10,"0"], [2,9,"r"], [3,8,"1"], [4,7,"0"], [5,6,"r"], [0,11,"x"]], longForm [[1,10], [2,9], [3,8], [4,7], [5,6], [0,11]], "0r10rx"
  other
} from './tournament.js';

ass('2', other('0'));

ass('1', other('1'));

ass('0', other('2'));

ass('2', other('F'));

ass('2', other('G'));

ass('x', other('x'));

import {
  prettyResult
} from './tournament.js';

ass("-", prettyResult('x'));

ass("0 - 1", prettyResult('0'));

ass("½ - ½", prettyResult('1'));

ass("1 - 0", prettyResult('2'));

import {
  shortForm
} from './tournament.js';

ass([[1, 10, "0"], [2, 9, "r"], [3, 8, "1"], [4, 7, "0"], [5, 6, "r"], [0, 11, "F"]], shortForm([[1, 10], [2, 9], [3, 8], [4, 7], [5, 6], [0, 11]], "0r10r"));

ass([[1, 10, "0"], [2, 9, "r"], [3, 8, "1"], [4, 7, "0"], [5, 6, "r"], [0, 11, "x"]], shortForm([[1, 10], [2, 9], [3, 8], [4, 7], [5, 6], [0, 11]], "0r10rx"));

echo('Tests done!');

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdC5qcyIsInNvdXJjZVJvb3QiOiJcXCIsInNvdXJjZXMiOlsidGVzdC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsR0FBQSxFQUFBOztBQUFBLElBQUEsR0FBTyxPQUFPLENBQUM7O0FBRWYsR0FBQSxHQUFNLFFBQUEsQ0FBQyxDQUFELEVBQUcsQ0FBSCxDQUFBO0VBQ0wsSUFBRyxDQUFDLENBQUMsT0FBRixDQUFVLENBQVYsRUFBYSxDQUFiLENBQUg7QUFBdUIsV0FBdkI7O0VBQ0EsSUFBQSxDQUFLLDRFQUFMO0VBQ0EsSUFBQSxDQUFLLFVBQUwsRUFBaUIsSUFBSSxDQUFDLFNBQUwsQ0FBZSxDQUFmLENBQWpCO0VBQ0EsSUFBQSxDQUFLLFVBQUwsRUFBaUIsSUFBSSxDQUFDLFNBQUwsQ0FBZSxDQUFmLENBQWpCO1NBQ0EsT0FBTyxDQUFDLE1BQVIsQ0FBZSxLQUFmLEVBTEs7QUFBQTs7QUFNTixHQUFBLENBQUksQ0FBSixFQUFPLENBQUEsR0FBSSxDQUFYOztBQUVBLE9BQUE7RUFBUSxNQUFSO0NBQUEsTUFBQTs7QUFDQSxHQUFBLENBQUksQ0FBQyxDQUFDLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBRCxFQUFPLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBUCxDQUFELEVBQWUsQ0FBQyxDQUFDLENBQUQsRUFBRyxDQUFILENBQUQsRUFBTyxDQUFDLENBQUQsRUFBRyxDQUFILENBQVAsQ0FBZixFQUE2QixDQUFDLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBRCxFQUFPLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBUCxDQUE3QixFQUEyQyxDQUFDLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBRCxFQUFPLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBUCxDQUEzQyxDQUFKLEVBQStELE1BQUEsQ0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFELEVBQUcsQ0FBSCxDQUFELEVBQU8sQ0FBQyxDQUFELEVBQUcsQ0FBSCxDQUFQLENBQUQsRUFBZ0IsQ0FB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RyxDQUFILEVBQUssR0FBTCxDQUF4QixFQUFtQyxDQUFDLENBQUQsRUFBRyxDQUFILEVBQUssR0FBTCxDQUFuQyxFQUE4QyxDQUFDLENBQUQsRUFBRyxDQUFILEVBQUssR0FBTCxDQUE5QyxFQUF5RCxDQUFDLENBQUQsRUFBRyxFQUFILEVBQU0sR0FBTixDQUF6RCxDQUFKLEVBQTBFLFNBQUEsQ0FBVSxDQUFDLENBQUMsQ0FBRCxFQUFHLEVBQUgsQ0FBRCxFQUFTLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBVCxFQUFnQixDQUFDLENBQUQsRUFBRyxDQUFILENBQWhCLEVBQXVCLENBQUMsQ0FBRCxFQUFHLENBQUgsQ0FBdkIsRUFBOEIsQ0FBQyxDQUFELEVBQUcsQ0FBSCxDQUE5QixFQUFxQyxDQUFDLENBQUQsRUFBRyxFQUFILENBQXJDLENBQVYsRUFBd0QsUUFBeEQsQ0FBMUU7O0FBRUEsSUFBQSxDQUFLLGFBQUwiLCJzb3VyY2VzQ29udGVudCI6WyJlY2hvID0gY29uc29sZS5sb2dcclxuXHJcbmFzcyA9IChhLGIpIC0+XHJcblx0aWYgXy5pc0VxdWFsIGEsIGIgdGhlbiByZXR1cm5cclxuXHRlY2hvICdBc3NlcnRpb24gZmFpbGVkOiAob3BlbiB0aGUgQXNzZXJ0aW9uIGJlbG93IHRvIGZpbmQgdGhlIGZhaWxpbmcgYXNzZXJ0aW9uKSdcclxuXHRlY2hvICcgIGV4cGVjdCcsIEpTT04uc3RyaW5naWZ5IGEgXHJcblx0ZWNobyAnICBhY3R1YWwnLCBKU09OLnN0cmluZ2lmeSBiXHJcblx0Y29uc29sZS5hc3NlcnQgZmFsc2UgIyBjYW4gYmUgdXNlZCB0byB0cmFjayB0aGUgYXNzZXJ0XHJcbmFzcyA3LCAzICsgNFxyXG5cclxuaW1wb3J0IHtleHBhbmR9IGZyb20gJy4vdG91cm5hbWVudC5qcydcclxuYXNzIFtbWzEsMl0sWzMsNF1dLFtbMiwxXSxbNCwzXV0sW1sxLDRdLFsyLDNdXSxbWzQsMV0sWzMsMl1dXSwgZXhwYW5kIFtbWzEsMl0sWzMsNF1dLCBbWzEsNF0sWzIsM11dXVxyXG5cclxuaW1wb3J0IHtmaW5kTnVtYmVyT2ZEZWNpbWFsc30gZnJvbSAnLi90b3VybmFtZW50LmpzJ1xyXG5hc3MgMCwgZmluZE51bWJlck9mRGVjaW1hbHMgWzEyMDAsMTIwMF1cclxuYXNzIDAsIGZpbmROdW1iZXJPZkRlY2ltYWxzIFsxMjAwLDEyMDFdXHJcbmFzcyAwLCBmaW5kTnVtYmVyT2ZEZWNpbWFscyBbMTIwMC4yMywxMjAwLjIzXVxyXG5hc3MgMSwgZmluZE51bWJlck9mRGVjaW1hbHMgWzEyMDAuMjMsMTIwMC4zXVxyXG5hc3MgMSwgZmluZE51bWJlck9mRGVjaW1hbHMgWzEyMDAuMjMsMTIwMC4zXVxyXG5hc3MgMywgZmluZE51bWJlck9mRGVjaW1hbHMgWzEyMDAuMjMsMTIwMC4yMzQ1XVxyXG5hc3MgMCwgZmluZE51bWJlck9mRGVjaW1hbHMgWzEyMDAuMTIzNDUsMTIwMC4xMjM0NV1cclxuXHJcbmltcG9ydCB7bG9uZ0Zvcm19IGZyb20gJy4vdG91cm5hbWVudC5qcydcclxuIyBhc3MgW1xyXG4jIFx0WyAwLDExLCd3JywnRiddXHJcbiMgXHRbIDEsMTAsJ3cnLCcwJ11cclxuIyBcdFsgMiwgOSwndycsJ3InXVxyXG4jIFx0WyAzLCA4LCd3JywnMSddXHJcbiMgXHRbIDQsIDcsJ3cnLCcwJ11cclxuIyBcdFsgNSwgNiwndycsJ3InXVxyXG4jIFx0WyA2LCA1LCdiJywnciddXHJcbiMgXHRbIDcsIDQsJ2InLCcxJ11cclxuIyBcdFsgOCwgMywnYicsJzAnXVxyXG4jIFx0WyA5LCAyLCdiJywnciddXHJcbiMgXHRbMTAsIDEsJ2InLCcxJ11cclxuIyBcdFsxMSwgMCwnYicsJzEnXVxyXG4jIF0sIGxvbmdGb3JtIFtbMSwxMF0sIFsyLDldLCBbMyw4XSwgWzQsN10sIFs1LDZdLCBbMCwxMV1dLCBcIjByMTByXCJcclxuIyBhc3MgW1sxLDEwLFwiMFwiXSwgWzIsOSxcInJcIl0sIFszLDgsXCIxXCJdLCBbNCw3LFwiMFwiXSwgWzUsNixcInJcIl0sIFswLDExLFwieFwiXV0sIGxvbmdGb3JtIFtbMSwxMF0sIFsyLDldLCBbMyw4XSwgWzQsN10sIFs1LDZdLCBbMCwxMV1dLCBcIjByMTByeFwiXHJcblxyXG5pbXBvcnQge290aGVyfSBmcm9tICcuL3RvdXJuYW1lbnQuanMnXHJcbmFzcyAnMicsIG90aGVyICcwJ1xyXG5hc3MgJzEnLCBvdGhlciAnMSdcclxuYXNzICcwJywgb3RoZXIgJzInXHJcbmFzcyAnMicsIG90aGVyICdGJ1xyXG5hc3MgJzInLCBvdGhlciAnRydcclxuYXNzICd4Jywgb3RoZXIgJ3gnXHJcblxyXG5pbXBvcnQge3ByZXR0eVJlc3VsdH0gZnJvbSAnLi90b3VybmFtZW50LmpzJ1xyXG5hc3MgXCItXCIsICAgICBwcmV0dHlSZXN1bHQgJ3gnXHJcbmFzcyBcIjAgLSAxXCIsIHByZXR0eVJlc3VsdCAnMCdcclxuYXNzIFwiwr0gLSDCvVwiLCBwcmV0dHlSZXN1bHQgJzEnXHJcbmFzcyBcIjEgLSAwXCIsIHByZXR0eVJlc3VsdCAnMidcclxuXHJcbmltcG9ydCB7c2hvcnRGb3JtfSBmcm9tICcuL3RvdXJuYW1lbnQuanMnXHJcbmFzcyBbWzEsMTAsXCIwXCJdLCBbMiw5LFwiclwiXSwgWzMsOCxcIjFcIl0sIFs0LDcsXCIwXCJdLCBbNSw2LFwiclwiXSwgWzAsMTEsXCJGXCJdXSwgc2hvcnRGb3JtIFtbMSwxMF0sIFsyLDldLCBbMyw4XSwgWzQsN10sIFs1LDZdLCBbMCwxMV1dLCBcIjByMTByXCJcclxuYXNzIFtbMSwxMCxcIjBcIl0sIFsyLDksXCJyXCJdLCBbMyw4LFwiMVwiXSwgWzQsNyxcIjBcIl0sIFs1LDYsXCJyXCJdLCBbMCwxMSxcInhcIl1dLCBzaG9ydEZvcm0gW1sxLDEwXSwgWzIsOV0sIFszLDhdLCBbNCw3XSwgWzUsNl0sIFswLDExXV0sIFwiMHIxMHJ4XCJcclxuXHJcbmVjaG8gJ1Rlc3RzIGRvbmUhJyJdfQ==
//# sourceURL=c:\github\2025\013-FloatingBerger\test.coffee