// Generated by CoffeeScript 2.7.0
var HIGH, LOW, Player, echo, elos, expected_score, index, keyPressed, mouseMoved, paint, player, players, setup, xdraw;

echo = console.log;

elos = [2416, 2413, 2366, 2335, 2272, 2235, 2213, 2141, 2113, 2109, 2108, 2093, 2076, 2065, 2048, 2046, 2039, 2035, 2031, 2022, 2001, 1985, 1977, 1954, 1944, 1936, 1923, 1907, 1897, 1896, 1893, 1889, 1886, 1885, 1880, 1878, 1871, 1852, 1848, 1846, 1835, 1833, 1828, 1827, 1818, 1803, 1800, 1796, 1794, 1793, 1787, 1783, 1778, 1768, 1763, 1761, 1748, 1733, 1733, 1728, 1726, 1721, 1709, 1695, 1691, 1688, 1680, 1671, 1650, 1641, 1624, 1622, 1579, 1575, 1524, 1480, 1417, 1406];

LOW = 1400;

HIGH = 2420;

players = [];

player = null;

index = 0;

Player = class Player {
  constructor(name, elo1, score, swiss, fairpair) {
    this.name = name;
    this.elo = elo1;
    this.score = score;
    this.swiss = swiss;
    this.fairpair = fairpair;
  }

  lines(elos, y) {
    var elo, i, len, results, x;
    stroke('black');
    strokeWeight(1);
    results = [];
    for (i = 0, len = elos.length; i < len; i++) {
      elo = elos[i];
      x = map(elo, LOW, HIGH, 0, width);
      results.push(line(x, 100, x, y));
    }
    return results;
  }

  marks(elos, y) {
    var elo, i, len, results, t, x;
    results = [];
    for (i = 0, len = elos.length; i < len; i++) {
      elo = elos[i];
      t = round(100 * (1 - expected_score(this.elo, elo)));
      x = map(elo, LOW, HIGH, 0, width);
      fill('black');
      noStroke();
      results.push(text(t, x, y));
    }
    return results;
  }

  draw() {
    this.lines(this.fairpair, 80);
    this.marks([this.fairpair[0], _.last(this.fairpair)], 75);
    this.lines(this.swiss, 120);
    return this.marks(this.swiss, 140);
  }

};

setup = function() {
  createCanvas(window.innerWidth, window.innerHeight);
  rectMode(CENTER);
  textSize(30);
  textAlign(CENTER);
  players.push(new Player('Rånby', 1893, 4.0, [2335, 2108, 2046, 1800, 1778, 1733, 1641, 1622], [1907, 1897, 1896, 1889, 1886, 1885, 1880, 1878]));
  players.push(new Player('Jakenberg', 2022, 4.5, [1728, 1680, 2213, 1846, 1871, 2048, 2039, 2141], [2048, 2046, 2039, 2035, 2031, 2001, 1985, 1977]));
  players.push(new Player('Sörensen', 2416, 6.5, [1835, 1985, 2035, 2108, 2213, 2113, 2366, 2235], [2413, 2366, 2335, 2272, 2235, 2213, 2141, 2113]));
  players.push(new Player('Gore', 1793, 5.5, [2108, 1695, 2046, 2001, 2093, 2065, 2035, 2031], [1803, 1800, 1796, 1794, 1787, 1783, 1778, 1768]));
  player = players[index];
  index = 0;
  xdraw();
  return mouseMoved();
};

paint = function(elos, color, size) {
  var elo, i, len, results, x;
  fill(color);
  stroke(color);
  results = [];
  for (i = 0, len = elos.length; i < len; i++) {
    elo = elos[i];
    x = map(elo, LOW, HIGH, 0, width);
    results.push(circle(x, 100, size));
  }
  return results;
};

expected_score = function(rating, own_rating) {
  return 1 / (1 + 10 ** ((rating - own_rating) / 400));
};

xdraw = function() {
  background('white');
  stroke('black');
  line(0, 100, width, 100);
  paint(elos, 'black', 4);
  paint([player.elo], 'red', 6);
  textSize(20);
  player.draw();
  fill('black');
  return stroke('black');
};

mouseMoved = function() {
  var elo;
  xdraw();
  noStroke();
  text(`FairPair vs Swiss (${player.name} ${player.elo} ${player.score})`, width / 2, 35);
  elo = map(mouseX, 0, width, LOW, HIGH);
  // text int(elo),width/2,140
  text(`${round(elo)} Sannolik vinst ${round(100 * (1 - expected_score(player.elo, elo)))}%`, width / 2, 140 + 40);
  return text('Tyresö Open 2024 (n=78)', width / 2, 140 + 80);
};

keyPressed = function(event) {
  if (event.key === ' ') {
    index = (index + 1) % players.length;
    player = players[index];
  }
  if (event.key === 't') {
    window.location.href = "https://member.schack.se/ShowTournamentServlet?id=13664&listingtype=2";
  }
  return mouseMoved();
};

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\2025\021-FairPair-vs-Swiss\coffee\sketch.coffee