// Generated by CoffeeScript 2.7.0
var add, addLink, best, byt, calcLoss, echo, evals, figurine, getParam, klass, makeTables, moves, params, parseMove, showBest, showLoss, state,
  indexOf = [].indexOf;

echo = console.log;

state = {
  letter: 0,
  loss: 0,
  best: 0 // visa bättre drag
};

params = null;

moves = [];

evals = [];

best = [];

byt = function(san, a, b) {
  var i, j, ref;
  for (i = j = 0, ref = a.length; (0 <= ref ? j < ref : j > ref); i = 0 <= ref ? ++j : --j) {
    san = san.replace(a[i], b[i]);
  }
  return san;
};

figurine = function(san) {
  if (state.letter === 1) {
    return byt(san, 'QRBN', 'DTLS');
  } else {
    return byt(san, 'DTLS', 'QRBN');
  }
};

getParam = function(name) {
  var param;
  params = new URLSearchParams(window.location.search);
  param = params.get(name);
  if (indexOf.call("move eval best".split(' '), name) >= 0) {
    return (param != null ? param.split("_") : void 0) || [];
  }
  return param;
};

klass = function(value) {
  value = Math.abs(value);
  if (value < 20) {
    return "";
  }
  if (value < 50) {
    return "•";
  }
  if (value < 100) {
    return "••";
  }
  if (value < 300) {
    return "•••";
  }
  return "••••";
};

parseMove = function(moveStr, chess) {
  var allMoves, j, len, m;
  allMoves = chess.moves({
    verbose: true
  });
  for (j = 0, len = allMoves.length; j < len; j++) {
    m = allMoves[j];
    if (m.san === moveStr) {
      return {
        from: m.from,
        to: m.to
      };
    }
  }
  return null;
};

add = function(tr, text, alignment = 'right') {
  var td;
  td = document.createElement("td");
  td.style = `text-align: ${alignment};`;
  td.textContent = text;
  return tr.appendChild(td);
};

addLink = function(tr, href, text, alignment = 'right') {
  var td;
  td = document.createElement("td");
  td.style = `text-align: ${alignment};`;
  td.innerHTML = `<a href='${href}'>${text}</a>`;
  return tr.appendChild(td);
};

calcLoss = function(i) {
  return evals[i];
};

showLoss = function(i) {
  if (state.loss === 0) {
    return klass(evals[i]);
  }
  if (state.loss === 1) {
    return evals[i];
  }
};

showBest = function(i) {
  if (state.best === 1) {
    return best[i];
  }
  if (best[i] !== moves[i] && calcLoss(i) >= 20) {
    return best[i];
  }
  return '';
};

makeTables = function() {
  var i, j, k, key, keys, l, len, len1, ref, ref1, results, tbody, tbodypgn, tr, value;
  tbodypgn = document.querySelector("#pgnHeaders tbody");
  tbody = document.querySelector("#chessTable tbody");
  tbodypgn.innerHTML = "";
  tbody.innerHTML = "";
  keys = [];
  ref = [...params.entries()];
  for (j = 0, len = ref.length; j < len; j++) {
    [key, value] = ref[j];
    keys.push(key);
  }
  for (k = 0, len1 = keys.length; k < len1; k++) {
    key = keys[k];
    if (indexOf.call('move eval best'.split(' '), key) >= 0) {
      continue;
    }
    tr = document.createElement("tr");
    add(tr, key, 'right');
    if (key === 'Link') {
      addLink(tr, getParam(key), "Link", 'left');
    } else {
      add(tr, getParam(key).replaceAll("_", " "), 'left');
    }
    tbodypgn.appendChild(tr);
  }
  moves = getParam("move").map(figurine);
  evals = getParam("eval").map(parseFloat);
  best = getParam("best").map(figurine);
  echo(moves);
  echo(evals);
  echo(best);
// Fyll i tabellen
  results = [];
  for (i = l = 0, ref1 = moves.length; l < ref1; i = l += 2) {
    tr = document.createElement("tr");
    //if i==0 then continue
    add(tr, showBest(i));
    add(tr, showLoss(i));
    add(tr, moves[i]);
    add(tr, (Math.floor(i / 2)) + 1, 'center');
    add(tr, moves[i + 1], 'left');
    add(tr, showLoss(i + 1), 'left');
    add(tr, showBest(i + 1), 'left');
    results.push(tbody.appendChild(tr));
  }
  return results;
};

window.onload = function() {
  params = new URLSearchParams(window.location.search);
  return makeTables();
};

document.addEventListener('keydown', function(event) {
  echo("Tangent nedtryckt:", event.key);
  if (event.key === 'l') {
    state.letter = 1 - state.letter;
    makeTables();
  }
  if (event.key === 'd') {
    state.loss = 1 - state.loss;
    state.best = 1 - state.best;
    return makeTables();
  }
});

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=c:\github\2025\012-ChessViewer\coffee\analyze.coffee