// Generated by CoffeeScript 2.7.0
var echo, formatPGN, parsePGN, pretty, removeEval, removeParenthesis, splitMoves,
  indexOf = [].indexOf;

echo = console.log;

formatPGN = function() {
  var input, output;
  input = document.getElementById("pgn-input").value;
  output = parsePGN(input);
  return document.getElementById("xoutput").innerHTML = output;
};

pretty = function(raw) {
  var arr, move;
  if (indexOf.call(raw, "{") < 0) {
    return [raw.trim(), ""];
  }
  arr = raw.split(' ');
  move = arr[0];
  echo(arr);
  if ("Inaccuracy." === arr[3]) {
    return [move, '• ' + arr[4]];
  }
  if ("Mistake." === arr[3]) {
    return [move, '•• ' + arr[4]];
  }
  if ("Blunder." === arr[3]) {
    return [move, '••• ' + arr[4]];
  }
  if ("Checkmate" === arr[3]) {
    return [move, '••• ' + arr[7]];
  }
  if ("checkmate" === arr[5]) {
    return [move, '••• ' + arr[7]];
  }
  return [move, ''];
};

// echo ["d5",""], pretty "d5  "
// pretty "Bh5  { Inaccuracy. Bxf3 was best. }  " => ["Bh5","• (Bxf3)"]
splitMoves = function(pgn) {
  var a, araw, arr, ax, b, braw, bx, move, p, q, r;
  arr = [];
  move = 1;
  while (move < 71) {
    a = 2 + move.toString().length;
    p = pgn.indexOf(move + '. ');
    q = pgn.indexOf(move + '... ');
    r = pgn.indexOf((move + 1) + '. ');
    b = 4 + (move + 1).toString().length;
    araw = pgn.substring(p + a, q);
    braw = pgn.substring(q + b, r);
    if (indexOf.call(araw, '{') < 0) {
      ax = "";
    }
    if (indexOf.call(braw, '{') < 0) {
      bx = "";
    }
    arr.push([move].concat(pretty(araw)).concat(pretty(braw)));
    move += 1;
  }
  return arr;
};

removeParenthesis = function(pgn, left, right) {
  var ch, i, len, level, result;
  result = "";
  level = 0;
  for (i = 0, len = pgn.length; i < len; i++) {
    ch = pgn[i];
    if (ch === left) {
      level = level + 1;
    } else if (ch === right) {
      level = level - 1;
    } else if (level === 0) {
      result += ch;
    }
  }
  return result;
};

removeEval = function(pgn) {
  var ch, i, len, level, result;
  result = "";
  level = 0;
  for (i = 0, len = pgn.length; i < len; i++) {
    ch = pgn[i];
    if (ch === '[') {
      level = level + 1;
    } else if (ch === ']') {
      level = level - 1;
    } else if (level === 0) {
      result += ch;
    }
  }
  return result;
};

parsePGN = function(pgn) {
  var a, arr, b, c, d, e, i, len, s;
  pgn = removeParenthesis(pgn, '(', ')');
  pgn = removeEval(pgn);
  pgn = pgn.replaceAll('{  }', '');
  pgn = pgn.replaceAll('??', '');
  pgn = pgn.replaceAll('?!', '');
  pgn = pgn.replaceAll('?', '');
  arr = splitMoves(pgn);
  s = "";
  for (i = 0, len = arr.length; i < len; i++) {
    [a, b, c, d, e] = arr[i];
    s += `<tr><td>${a}</td><td>${b}</td><td>${c}</td><td>${d}</td><td>${e}</td></tr>`;
  }
  return '<table>' + s + "</table>";
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uXFwiLCJzb3VyY2VzIjpbImNvZmZlZVxcc2tldGNoLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQSxJQUFBLEVBQUEsU0FBQSxFQUFBLFFBQUEsRUFBQSxNQUFBLEVBQUEsVUFBQSxFQUFBLGlCQUFBLEVBQUEsVUFBQTtFQUFBOztBQUFBLElBQUEsR0FBTyxPQUFPLENBQUM7O0FBRWYsU0FBQSxHQUFZLFFBQUEsQ0FBQSxDQUFBO0FBQ1osTUFBQSxLQUFBLEVBQUE7RUFBQyxLQUFBLEdBQVEsUUFBUSxDQUFDLGNBQVQsQ0FBd0IsV0FBeEIsQ0FBb0MsQ0FBQztFQUM3QyxNQUFBLEdBQVMsUUFBQSxDQUFTLEtBQVQ7U0FDVCxRQUFRLENBQUMsY0FBVCxDQUF3QixTQUF4QixDQUFrQyxDQUFDLFNBQW5DLEdBQStDO0FBSHBDOztBQUtaLE1BQUEsR0FBUyxRQUFBLENBQUMsR0FBRCxDQUFBO0FBQ1QsTUFBQSxHQUFBLEVBQUE7RUFBQyxpQkFBYyxLQUFYLFFBQUg7QUFBdUIsV0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFKLENBQUEsQ0FBRCxFQUFZLEVBQVosRUFBOUI7O0VBQ0EsR0FBQSxHQUFNLEdBQUcsQ0FBQyxLQUFKLENBQVUsR0FBVjtFQUNOLElBQUEsR0FBTyxHQUFHLENBQUMsQ0FBRDtFQUNWLElBQUEsQ0FBSyxHQUFMO0VBQ0EsSUFBRyxhQUFBLEtBQWlCLEdBQUcsQ0FBQyxDQUFELENBQXZCO0FBQWdDLFdBQU8sQ0FBQyxJQUFELEVBQU8sSUFBQSxHQUFPLEdBQUcsQ0FBQyxDQUFELENBQWpCLEVBQXZDOztFQUNBLElBQUcsVUFBQSxLQUFjLEdBQUcsQ0FBQyxDQUFELENBQXBCO0FBQTZCLFdBQU8sQ0FBQyxJQUFELEVBQU8sS0FBQSxHQUFRLEdBQUcsQ0FBQyxDQUFELENBQWxCLEVBQXBDOztFQUNBLElBQUcsVUFBQSxLQUFjLEdBQUcsQ0FBQyxDQUFELENBQXBCO0FBQTZCLFdB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UyxDQUFaO01BQW1CLE1BQUEsSUFBVSxHQUE3Qjs7RUFITjtTQUlBO0FBUFk7O0FBU2IsUUFBQSxHQUFXLFFBQUEsQ0FBQyxHQUFELENBQUE7QUFDWCxNQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUE7RUFBQyxHQUFBLEdBQU0saUJBQUEsQ0FBa0IsR0FBbEIsRUFBc0IsR0FBdEIsRUFBMkIsR0FBM0I7RUFDTixHQUFBLEdBQU0sVUFBQSxDQUFXLEdBQVg7RUFDTixHQUFBLEdBQU0sR0FBRyxDQUFDLFVBQUosQ0FBZSxNQUFmLEVBQXNCLEVBQXRCO0VBQ04sR0FBQSxHQUFNLEdBQUcsQ0FBQyxVQUFKLENBQWUsSUFBZixFQUFvQixFQUFwQjtFQUNOLEdBQUEsR0FBTSxHQUFHLENBQUMsVUFBSixDQUFlLElBQWYsRUFBb0IsRUFBcEI7RUFDTixHQUFBLEdBQU0sR0FBRyxDQUFDLFVBQUosQ0FBZSxHQUFmLEVBQW1CLEVBQW5CO0VBQ04sR0FBQSxHQUFNLFVBQUEsQ0FBVyxHQUFYO0VBQ04sQ0FBQSxHQUFJO0VBQ0osS0FBQSxxQ0FBQTtJQUFJLENBQUMsQ0FBRCxFQUFHLENBQUgsRUFBSyxDQUFMLEVBQU8sQ0FBUCxFQUFTLENBQVQ7SUFDSCxDQUFBLElBQUssQ0FBQSxRQUFBLENBQUEsQ0FBVyxDQUFYLENBQUEsU0FBQSxDQUFBLENBQXdCLENBQXhCLENBQUEsU0FBQSxDQUFBLENBQXFDLENBQXJDLENBQUEsU0FBQSxDQUFBLENBQWtELENBQWxELENBQUEsU0FBQSxDQUFBLENBQStELENBQS9ELENBQUEsVUFBQTtFQUROO1NBRUEsU0FBQSxHQUFZLENBQVosR0FBZ0I7QUFYTiIsInNvdXJjZXNDb250ZW50IjpbImVjaG8gPSBjb25zb2xlLmxvZ1xyXG5cclxuZm9ybWF0UEdOID0gLT5cclxuXHRpbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicGduLWlucHV0XCIpLnZhbHVlXHJcblx0b3V0cHV0ID0gcGFyc2VQR04oaW5wdXQpXHJcblx0ZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ4b3V0cHV0XCIpLmlubmVySFRNTCA9IG91dHB1dFxyXG5cclxucHJldHR5ID0gKHJhdykgLT5cclxuXHRpZiBcIntcIiBub3QgaW4gcmF3IHRoZW4gcmV0dXJuIFtyYXcudHJpbSgpLFwiXCJdXHJcblx0YXJyID0gcmF3LnNwbGl0ICcgJ1xyXG5cdG1vdmUgPSBhcnJbMF1cclxuXHRlY2hvIGFyclxyXG5cdGlmIFwiSW5hY2N1cmFjeS5cIiA9PSBhcnJbM10gdGhlbiByZXR1cm4gW21vdmUsICfigKIgJyArIGFycls0XV1cclxuXHRpZiBcIk1pc3Rha2UuXCIgPT0gYXJyWzNdIHRoZW4gcmV0dXJuIFttb3ZlLCAn4oCi4oCiICcgKyBhcnJbNF1dXHJcblx0aWYgXCJCbHVuZGVyLlwiID09IGFyclszXSB0aGVuIHJldHVybiBbbW92ZSwgJ+KAouKAouKAoiAnICsgYXJyWzRdXVxyXG5cdGlmIFwiQ2hlY2ttYXRlXCIgPT0gYXJyWzNdIHRoZW4gcmV0dXJuIFttb3ZlLCAn4oCi4oCi4oCiICcgKyBhcnJbN11dXHJcblx0aWYgXCJjaGVja21hdGVcIiA9PSBhcnJbNV0gdGhlbiByZXR1cm4gW21vdmUsICfigKLigKLigKIgJyArIGFycls3XV1cclxuXHRbbW92ZSwnJ11cclxuIyBlY2hvIFtcImQ1XCIsXCJcIl0sIHByZXR0eSBcImQ1ICBcIlxyXG4jIHByZXR0eSBcIkJoNSAgeyBJbmFjY3VyYWN5LiBCeGYzIHdhcyBiZXN0LiB9ICBcIiA9PiBbXCJCaDVcIixcIuKAoiAoQnhmMylcIl1cclxuXHJcbnNwbGl0TW92ZXMgPSAocGduKSAtPlxyXG5cdGFyciA9IFtdXHJcblx0bW92ZSA9IDEgXHJcblx0d2hpbGUgbW92ZSA8IDcxXHJcblx0XHRhID0gMiArIG1vdmUudG9TdHJpbmcoKS5sZW5ndGhcclxuXHRcdHAgPSBwZ24uaW5kZXhPZiBtb3ZlICsgJy4gJ1xyXG5cdFx0cSA9IHBnbi5pbmRleE9mIG1vdmUgKyAnLi4uICdcclxuXHRcdHIgPSBwZ24uaW5kZXhPZiAobW92ZSsxKSArICcuICdcclxuXHRcdGIgPSA0ICsgKG1vdmUrMSkudG9TdHJpbmcoKS5sZW5ndGhcclxuXHRcdGFyYXcgPSBwZ24uc3Vic3RyaW5nKHArYSxxKVxyXG5cdFx0YnJhdyA9IHBnbi5zdWJzdHJpbmcocStiLHIpXHJcblx0XHRpZiAneycgbm90IGluIGFyYXcgdGhlbiBheCA9IFwiXCJcclxuXHRcdGlmICd7JyBub3QgaW4gYnJhdyB0aGVuIGJ4ID0gXCJcIlxyXG5cdFx0YXJyLnB1c2ggW21vdmVdLmNvbmNhdChwcmV0dHkoYXJhdykpLmNvbmNhdChwcmV0dHkoYnJhdykpXHJcblx0XHRtb3ZlICs9IDFcclxuXHRhcnJcclxuXHJcbnJlbW92ZVBhcmVudGhlc2lzID0gKHBnbiwgbGVmdCwgcmlnaHQpIC0+XHJcblx0cmVzdWx0ID0gXCJcIlxyXG5cdGxldmVsID0gMFxyXG5cdGZvciBjaCBpbiBwZ25cclxuXHRcdGlmIGNoPT1sZWZ0IHRoZW4gbGV2ZWwgPSBsZXZlbCArIDFcclxuXHRcdGVsc2UgaWYgY2g9PXJpZ2h0IHRoZW4gbGV2ZWwgPSBsZXZlbCAtIDFcclxuXHRcdGVsc2UgaWYgbGV2ZWwgPT0gMCB0aGVuIHJlc3VsdCArPSBjaFxyXG5cdHJlc3VsdFxyXG5cclxucmVtb3ZlRXZhbCA9IChwZ24pIC0+XHJcblx0cmVzdWx0ID0gXCJcIlxyXG5cdGxldmVsID0gMFxyXG5cdGZvciBjaCBpbiBwZ25cclxuXHRcdGlmIGNoPT0nWycgdGhlbiBsZXZlbCA9IGxldmVsICsgMVxyXG5cdFx0ZWxzZSBpZiBjaD09J10nIHRoZW4gbGV2ZWwgPSBsZXZlbCAtIDFcclxuXHRcdGVsc2UgaWYgbGV2ZWwgPT0gMCB0aGVuIHJlc3VsdCArPSBjaFxyXG5cdHJlc3VsdFxyXG5cclxucGFyc2VQR04gPSAocGduKSAtPiBcclxuXHRwZ24gPSByZW1vdmVQYXJlbnRoZXNpcyhwZ24sJygnLCAnKScpXHJcblx0cGduID0gcmVtb3ZlRXZhbCBwZ25cclxuXHRwZ24gPSBwZ24ucmVwbGFjZUFsbCAneyAgfScsJydcclxuXHRwZ24gPSBwZ24ucmVwbGFjZUFsbCAnPz8nLCcnXHJcblx0cGduID0gcGduLnJlcGxhY2VBbGwgJz8hJywnJ1xyXG5cdHBnbiA9IHBnbi5yZXBsYWNlQWxsICc/JywnJ1xyXG5cdGFyciA9IHNwbGl0TW92ZXMgcGduXHJcblx0cyA9IFwiXCJcclxuXHRmb3IgW2EsYixjLGQsZV0gaW4gYXJyXHJcblx0XHRzICs9IFwiPHRyPjx0ZD4je2F9PC90ZD48dGQ+I3tifTwvdGQ+PHRkPiN7Y308L3RkPjx0ZD4je2R9PC90ZD48dGQ+I3tlfTwvdGQ+PC90cj5cIlxyXG5cdCc8dGFibGU+JyArIHMgKyBcIjwvdGFibGU+XCJcclxuIl19
//# sourceURL=c:\github\2025\003-PrettyPGN\coffee\sketch.coffee