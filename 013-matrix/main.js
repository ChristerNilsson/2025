// Generated by CoffeeScript 2.7.0
var COLS, ROWS, activeCol, activeRow, i, j, matrix, move, ref, ref1, render, row, x, y;

ROWS = 100;

COLS = 8;

matrix = [];

for (y = i = 0, ref = ROWS; (0 <= ref ? i < ref : i > ref); y = 0 <= ref ? ++i : --i) {
  row = [];
  for (x = j = 0, ref1 = COLS; (0 <= ref1 ? j < ref1 : j > ref1); x = 0 <= ref1 ? ++j : --j) {
    row.push(0);
  }
  matrix.push(row);
}

activeRow = 0;

activeCol = 0;

render = function() {
  var activeCell, container, k, l, ref2, ref3, table, td, tr;
  container = document.getElementById('matrix');
  container.innerHTML = '';
  table = document.createElement('table');
  for (y = k = 0, ref2 = ROWS; (0 <= ref2 ? k < ref2 : k > ref2); y = 0 <= ref2 ? ++k : --k) {
    tr = document.createElement('tr');
    for (x = l = 0, ref3 = COLS; (0 <= ref3 ? l < ref3 : l > ref3); x = 0 <= ref3 ? ++l : --l) {
      td = document.createElement('td');
      td.textContent = matrix[y][x];
      td.dataset.row = y;
      td.dataset.col = x;
      if (y === activeRow && x === activeCol) {
        td.classList.add('active');
      }
      td.addEventListener('click', function(event) {
        activeRow = parseInt(event.target.dataset.row);
        activeCol = parseInt(event.target.dataset.col);
        return render();
      });
      tr.appendChild(td);
    }
    table.appendChild(tr);
  }
  container.appendChild(table);
  // Scrolla så att aktiv cell alltid syns
  activeCell = table.querySelector('.active');
  return activeCell != null ? activeCell.scrollIntoView({
    behavior: 'smooth',
    block: 'nearest',
    inline: 'nearest'
  }) : void 0;
};

move = function(dy, dx) {
  activeRow = Math.max(0, Math.min(ROWS - 1, activeRow + dy));
  activeCol = Math.max(0, Math.min(COLS - 1, activeCol + dx));
  return render();
};

document.addEventListener('keydown', function(e) {
  switch (e.key) {
    case 'ArrowUp':
      return move(-1, 0);
    case 'ArrowDown':
      return move(1, 0);
    case 'ArrowLeft':
      return move(0, -1);
    case 'ArrowRight':
      return move(0, 1);
    case '0':
    case '1':
    case '2':
    case '3':
      matrix[activeRow][activeCol] = parseInt(e.key);
      activeRow = (activeRow + 1) % ROWS; // wrap neråt
      return render();
  }
});

render();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiJcXCIsInNvdXJjZXMiOlsibWFpbi5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLElBQUEsSUFBQSxFQUFBLElBQUEsRUFBQSxTQUFBLEVBQUEsU0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsTUFBQSxFQUFBLElBQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBLE1BQUEsRUFBQSxHQUFBLEVBQUEsQ0FBQSxFQUFBOztBQUFBLElBQUEsR0FBTzs7QUFDUCxJQUFBLEdBQU87O0FBRVAsTUFBQSxHQUFTOztBQUNULEtBQVMsK0VBQVQ7RUFDQyxHQUFBLEdBQU07RUFDTixLQUFTLG9GQUFUO0lBQ0MsR0FBRyxDQUFDLElBQUosQ0FBUyxDQUFUO0VBREQ7RUFFQSxNQUFNLENBQUMsSUFBUCxDQUFZLEdBQVo7QUFKRDs7QUFNQSxTQUFBLEdBQVk7O0FBQ1osU0FBQSxHQUFZOztBQUVaLE1BQUEsR0FBUyxRQUFBLENBQUEsQ0FBQTtBQUNULE1BQUEsVUFBQSxFQUFBLFNBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLElBQUEsRUFBQSxJQUFBLEVBQUEsS0FBQSxFQUFBLEVBQUEsRUFBQTtFQUFDLFNBQUEsR0FBWSxRQUFRLENBQUMsY0FBVCxDQUF3QixRQUF4QjtFQUNaLFNBQVMsQ0FBQyxTQUFWLEdBQXNCO0VBQ3RCLEtBQUEsR0FBUSxRQUFRLENBQUMsYUFBVCxDQUF1QixPQUF2QjtFQUVSLEtBQVMsb0ZBQVQ7SUFDQyxFQUFBLEdBQUssUUFBUSxDQUFDLGFBQVQsQ0FBdUIsSUFBdkI7SUFDTCxLQUFTLG9GQUFUO01BQ0MsRUFBQSxHQUFLLFFBQVEsQ0FBQyxhQUFULENBQXVCLElBQXZCO01BQ0wsRUFBRSxDQUFDLFdBQUgsR0FBaUIsTUFBTSxDQUFDLENBQUQsQ0FBRyxDQUFDLENBQUQ7TUFDMUIsRUFBRSxDQUFDLE9BQU8sQ0FBQyxHQUFYLEdBQWlCO01BQ2pCLEVBQUUsQ0FBQyxPQUFPLENBQUMsR0FBWCxHQUFpQjtNQUNqQixJQUFHLENBQUEsS0FBSyxTQUFMLElBQW1CLENBQUEsS0FBSyxTQUEzQjtRQUNDLEVBQUUsQ0FBQyxTQUFTLENBQUMsR0FBYixDQUFpQixRQUFqQixFQUREOztNQUVBLEVBQUUsQ0FBQyxnQkFBSCxDQUFvQixPQUFwQixFQUE2QixRQUFBLENBQUMsS0FBRCxDQUFBO1FBQzVCLFNBQUEsR0FBWSxRQUFBLENBQVMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBOUI7UUFDWixTQUFBLEdBQVksUUFBQSxDQUFTLEtBQUssQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEdBQTlCO2VBQ1osTUFBQSxDQUFBO01BSDRCLENBQTdCO01BSUEsRUFBRSxDQUFDLFdBQUgsQ0FBZSxFQUFmO0lBWEQ7SUFZQSxLQUFLLENBQUMsV0FBTixDQUFrQixFQUFsQjtFQWREO0VBZ0JBLFNBQVMsQ0FBQyxXQUFWLENBQXNCLEtBQXRCLEVBcEJEOztFQXVCQyxVQUFBLEdBQWEsS0FBSyxDQUFDLGFBQU4sQ0FBb0IsU0FBcEI7OEJBQ2IsVUFBVSxDQUFFLGNBQVosQ0FDQztJQUFBLFFBQUEsRUFBVSxRQUFWO0lBQ0EsS0FBQSxFQUFPLFNBRFA7SUFFQSxNQUFBLEVBQVE7RUFGUixDQUREO0FBekJROztBQThCVCxJQUFBLEdBQU8sUUFBQSxDQUFDLEVBQUQsRUFBSyxFQUFMLENBQUE7RUFDTixTQUFBLEdBQVksSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFULEVBQVksSUFBSSxDQUFDLEdBQUwsQ0FBUyxJQUFBLEdBQU8sQ0FBaEIsRUFBbUIsU0FBQSxHQUFZLEVBQS9CLENBQVo7RUFDWixTQUFBLEdBQVksSUFBSSxDQUFDLEdBQUwsQ0FBUyxDQUFULEVBQVksSUFBSSxDQUFDLEdBQUwsQ0FBUyxJQUFBLEdBQU8sQ0FBaEIsRUFBbUIsU0FBQSxHQUFZLEVBQS9CLENBQVo7U0FDWixNQUFBLENBQUE7QUFITTs7QUFLUCxRQUFRLENBQUMsZ0JBQVQsQ0FBMEIsU0FBMUIsRUFBcUMsUUFBQSxDQUFDLENBQUQsQ0FBQTtBQUNwQyxVQUFPLENBQUMsQ0FBQyxHQUFUO0FBQUEsU0FDTSxTQUROO2FBQ3FCLElBQUEsQ0FBSyxDQUFDLENBQU4sRUFBUyxDQUFUO0FBRHJCLFNBRU0sV0FGTjthQUV1QixJQUFBLENBQUssQ0FBTCxFQUFRLENBQVI7QUFGdkIsU0FHTSxXQUhOO2FBR3VCLElBQUEsQ0FBSyxDQUFMLEVBQVEsQ0FBQyxDQUFUO0FBSHZCLFNBSU0sWUFKTjthQUl3QixJQUFBLENBQUssQ0FBTCxFQUFRLENBQVI7QUFKeEIsU0FLTSxHQUxOO0FBQUEsU0FLVyxHQUxYO0FBQUEsU0FLZ0IsR0FMaEI7QUFBQSxTQUtxQixHQUxyQjtNQU1FLE1BQU0sQ0FBQyxTQUFELENBQVcsQ0FBQyxTQUFELENBQWpCLEdBQStCLFFBQUEsQ0FBUyxDQUFDLENBQUMsR0FBWDtNQUMvQixTQUFBLEdBQVksQ0FBQyxTQUFBLEdBQVksQ0FBYixDQUFBLEdBQWtCLEtBRGpDO2FBRUcsTUFBQSxDQUFBO0FBUkY7QUFEb0MsQ0FBckM7O0FBV0EsTUFBQSxDQUFBIiwic291cmNlc0NvbnRlbnQiOlsiUk9XUyA9IDEwMFxyXG5DT0xTID0gOFxyXG5cclxubWF0cml4ID0gW11cclxuZm9yIHkgaW4gWzAuLi5ST1dTXVxyXG5cdHJvdyA9IFtdXHJcblx0Zm9yIHggaW4gWzAuLi5DT0xTXVxyXG5cdFx0cm93LnB1c2ggMFxyXG5cdG1hdHJpeC5wdXNoIHJvd1xyXG5cclxuYWN0aXZlUm93ID0gMFxyXG5hY3RpdmVDb2wgPSAwXHJcblxyXG5yZW5kZXIgPSAtPlxyXG5cdGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkICdtYXRyaXgnXHJcblx0Y29udGFpbmVyLmlubmVySFRNTCA9ICcnXHJcblx0dGFibGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50ICd0YWJsZSdcclxuXHJcblx0Zm9yIHkgaW4gWzAuLi5ST1dTXVxyXG5cdFx0dHIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50ICd0cidcclxuXHRcdGZvciB4IGluIFswLi4uQ09MU11cclxuXHRcdFx0dGQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50ICd0ZCdcclxuXHRcdFx0dGQudGV4dENvbnRlbnQgPSBtYXRyaXhbeV1beF1cclxuXHRcdFx0dGQuZGF0YXNldC5yb3cgPSB5XHJcblx0XHRcdHRkLmRhdGFzZXQuY29sID0geFxyXG5cdFx0XHRpZiB5IGlzIGFjdGl2ZVJvdyBhbmQgeCBpcyBhY3RpdmVDb2xcclxuXHRcdFx0XHR0ZC5jbGFzc0xpc3QuYWRkICdhY3RpdmUnXHJcblx0XHRcdHRkLmFkZEV2ZW50TGlzdGVuZXIgJ2NsaWNrJywgKGV2ZW50KSAtPlxyXG5cdFx0XHRcdGFjdGl2ZVJvdyA9IHBhcnNlSW50IGV2ZW50LnRhcmdldC5kYXRhc2V0LnJvd1xyXG5cdFx0XHRcdGFjdGl2ZUNvbCA9IHBhcnNlSW50IGV2ZW50LnRhcmdldC5kYXRhc2V0LmNvbFxyXG5cdFx0XHRcdHJlbmRlcigpXHJcblx0XHRcdHRyLmFwcGVuZENoaWxkIHRkXHJcblx0XHR0YWJsZS5hcHBlbmRDaGlsZCB0clxyXG5cclxuXHRjb250YWluZXIuYXBwZW5kQ2hpbGQgdGFibGVcclxuXHJcblx0IyBTY3JvbGxhIHPDpSBhdHQgYWt0aXYgY2VsbCBhbGx0aWQgc3luc1xyXG5cdGFjdGl2ZUNlbGwgPSB0YWJsZS5xdWVyeVNlbGVjdG9yICcuYWN0aXZlJ1xyXG5cdGFjdGl2ZUNlbGw/LnNjcm9sbEludG9WaWV3XHJcblx0XHRiZWhhdmlvcjogJ3Ntb290aCdcclxuXHRcdGJsb2NrOiAnbmVhcmVzdCdcclxuXHRcdGlubGluZTogJ25lYXJlc3QnXHJcblxyXG5tb3ZlID0gKGR5LCBkeCkgLT5cclxuXHRhY3RpdmVSb3cgPSBNYXRoLm1heCAwLCBNYXRoLm1pbiBST1dTIC0gMSwgYWN0aXZlUm93ICsgZHlcclxuXHRhY3RpdmVDb2wgPSBNYXRoLm1heCAwLCBNYXRoLm1pbiBDT0xTIC0gMSwgYWN0aXZlQ29sICsgZHhcclxuXHRyZW5kZXIoKVxyXG5cclxuZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lciAna2V5ZG93bicsIChlKSAtPlxyXG5cdHN3aXRjaCBlLmtleVxyXG5cdFx0d2hlbiAnQXJyb3dVcCcgdGhlbiBtb3ZlIC0xLCAwXHJcblx0XHR3aGVuICdBcnJvd0Rvd24nIHRoZW4gbW92ZSAxLCAwXHJcblx0XHR3aGVuICdBcnJvd0xlZnQnIHRoZW4gbW92ZSAwLCAtMVxyXG5cdFx0d2hlbiAnQXJyb3dSaWdodCcgdGhlbiBtb3ZlIDAsIDFcclxuXHRcdHdoZW4gJzAnLCAnMScsICcyJywgJzMnXHJcblx0XHRcdG1hdHJpeFthY3RpdmVSb3ddW2FjdGl2ZUNvbF0gPSBwYXJzZUludCBlLmtleVxyXG5cdFx0XHRhY3RpdmVSb3cgPSAoYWN0aXZlUm93ICsgMSkgJSBST1dTXHQjIHdyYXAgbmVyw6V0XHJcblx0XHRcdHJlbmRlcigpXHJcblxyXG5yZW5kZXIoKVxyXG4iXX0=
//# sourceURL=c:\github\2025\013-matrix\main.coffee