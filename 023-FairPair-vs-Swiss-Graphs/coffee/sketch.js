// Generated by CoffeeScript 2.7.0
var echo, medeldiff, stddev;

echo = console.log;

// stats = (elos) ->
// 	summa = 0
// 	sumSq = 0
// 	for elo in elos
// 		summa += elo
// 		sumSQ += elo * elo
stddev = function(arr) {
  var mean, n, variance;
  n = arr.length;
  mean = arr.reduce((function(a, b) {
    return a + b;
  }), 0) / n;
  variance = arr.reduce((function(a, b) {
    return a + Math.pow(b - mean, 2);
  }), 0) / n;
  return [mean, Math.sqrt(variance)];
};

medeldiff = function(elos) {
  var elo, i, item, j, len, len1, result, summa;
  result = [];
  for (i = 0, len = elos.length; i < len; i++) {
    elo = elos[i];
    summa = 0;
    for (j = 0, len1 = elos.length; j < len1; j++) {
      item = elos[j];
      summa += elo - item;
    }
    result.push(Math.round(summa / elos.length));
  }
  return result;
};

echo(medeldiff([
  1812,
  1742,
  1732,
  1730,
  1722,
  1712,
  1705,
  1701,
  1700,
  1699,
  1681,
  1654 // Klass 1
]));

echo(medeldiff([
  1637,
  1636,
  1636,
  1621,
  1618,
  1617,
  1609,
  1592,
  1585,
  1585,
  1580,
  1600 // Klass 2
]));

echo(medeldiff([
  1873,
  1574,
  1574,
  1569,
  1569,
  1554,
  1551,
  1546,
  1544,
  1531,
  1527 // Klass 3
]));

echo(stddev([
  0.05,
  0.02,
  0.02,
  0.02,
  0.00,
  0.01,
  0.01,
  0.02 // fairpair p 1835
]));

echo(stddev([
  0.47,
  0.27,
  0.01,
  0.05,
  0.07,
  0.10,
  0.16,
  0.10 // swiss    p
]));

echo(stddev([
  0,
  0.07,
  0.11,
  0.2,
  0.24,
  0.26,
  0.33,
  0.35 // fairpair p 2416
]));

echo(stddev([
  0.07,
  0.24,
  0.26,
  0.35,
  0.4,
  0.42,
  0.47 // swiss    p
]));


//echo stddev [1701,1742,1732,1730,1681,1705,1812,1722,1699,1712,1654,1700]

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2tldGNoLmpzIiwic291cmNlUm9vdCI6Ii4uXFwiLCJzb3VyY2VzIjpbImNvZmZlZVxcc2tldGNoLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsSUFBQSxJQUFBLEVBQUEsU0FBQSxFQUFBOztBQUFBLElBQUEsR0FBTyxPQUFPLENBQUMsSUFBZjs7Ozs7Ozs7QUFTQSxNQUFBLEdBQVMsUUFBQSxDQUFDLEdBQUQsQ0FBQTtBQUNULE1BQUEsSUFBQSxFQUFBLENBQUEsRUFBQTtFQUFFLENBQUEsR0FBSSxHQUFHLENBQUM7RUFDUixJQUFBLEdBQU8sR0FBRyxDQUFDLE1BQUosQ0FBVyxDQUFDLFFBQUEsQ0FBQyxDQUFELEVBQUksQ0FBSixDQUFBO1dBQVUsQ0FBQSxHQUFJO0VBQWQsQ0FBRCxDQUFYLEVBQThCLENBQTlCLENBQUEsR0FBbUM7RUFDMUMsUUFBQSxHQUFXLEdBQUcsQ0FBQyxNQUFKLENBQVcsQ0FBQyxRQUFBLENBQUMsQ0FBRCxFQUFJLENBQUosQ0FBQTtXQUFVLENBQUEsR0FBSSxJQUFJLENBQUMsR0FBTCxDQUFTLENBQUEsR0FBSSxJQUFiLEVBQW1CLENBQW5CO0VBQWQsQ0FBRCxDQUFYLEVBQWtELENBQWxELENBQUEsR0FBdUQ7U0FDbEUsQ0FBQyxJQUFELEVBQU0sSUFBSSxDQUFDLElBQUwsQ0FBVSxRQUFWLENBQU47QUFKTzs7QUFNVCxTQUFBLEdBQVksUUFBQSxDQUFDLElBQUQsQ0FBQTtBQUNaLE1BQUEsR0FBQSxFQUFBLENBQUEsRUFBQSxJQUFBLEVBQUEsQ0FBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsTUFBQSxFQUFBO0VBQUUsTUFBQSxHQUFTO0VBQ1QsS0FBQSxzQ0FBQTs7SUFDRSxLQUFBLEdBQVE7SUFDUixLQUFBLHdDQUFBOztNQUNFLEtBQUEsSUFBUyxHQUFBLEdBQUk7SUFEZjtJQUVBLE1BQU0sQ0FBQyxJQUFQLENBQVksSUFBSSxDQUFDLEtBQUwsQ0FBVyxLQUFBLEdBQVEsSUFBSSxDQUFDLE1BQXhCLENBQVo7RUFKRjtTQUtBO0FBUFU7O0FBU1osSUFBQSxDQUFLLFNBQUEsQ0FBVTtFQUFDLElBQUQ7RUFBTSxJQUFOO0VBQVcsSUFBWDtFQUFnQixJQUFoQjtFQUFxQixJQUFyQjtFQUEwQixJQUExQjtFQUErQixJQUEvQjtFQUFvQyxJQUFwQztFQUF5QyxJQUF6QztFQUE4QyxJQUE5QztFQUFtRCxJQUFuRDtFQUF3RCxJQUF4RDtDQUFWLENBQUw7O0FBQ0EsSUFBQSxDQUFLLFNBQUEsQ0FBVTtFQUFDLElBQUQ7RUFBTSxJQUFOO0VBQVcsSUFBWDtFQUFnQixJQUFoQjtFQUFxQixJQUFyQjtFQUEwQixJQUExQjtFQUErQixJQUEvQjtFQUFvQyxJQUFwQztFQUF5QyxJQUF6QztFQUE4QyxJQUE5QztFQUFtRCxJQUFuRDtFQUF3RCxJQUF4RDtDQUFWLENBQUw7O0FBQ0EsSUFBQSxDQUFLLFNBQUEsQ0FBVTtFQUFDLElBQUQ7RUFBTSxJQUFOO0VBQVcsSUFBWDtFQUFnQixJQUFoQjtFQUFxQixJQUFyQjtFQUEwQixJQUExQjtFQUErQixJQUEvQjtFQUFvQyxJQUFwQztFQUF5QyxJQUF6QztFQUE4QyxJQUE5QztFQUFtRCxJQUFuRDtDQUFWLENBQUw7O0FBR0EsSUFBQSxDQUFLLE1BQUEsQ0FBTztFQUFDLElBQUQ7RUFBTSxJQUFOO0VBQVcsSUFBWDtFQUFnQixJQUFoQjtFQUFxQixJQUFyQjtFQUEwQixJQUExQjtFQUErQixJQUEvQjtFQUFvQyxJQUFwQztDQUFQLENBQUw7O0FBQ0EsSUFBQSxDQUFLLE1BQUEsQ0FBTztFQUFDLElBQUQ7RUFBTSxJQUFOO0VBQVcsSUFBWDtFQUFnQixJQUFoQjtFQUFxQixJQUFyQjtFQUEwQixJQUExQjtFQUErQixJQUEvQjtFQUFvQyxJQUFwQztDQUFQLENBQUw7O0FBRUEsSUFBQSxDQUFLLE1BQUEsQ0FBTztFQUFDLENBQUQ7RUFBRyxJQUFIO0VBQVEsSUFBUjtFQUFhLEdBQWI7RUFBaUIsSUFBakI7RUFBc0IsSUFBdEI7RUFBMkIsSUFBM0I7RUFBZ0MsSUFBaEM7Q0FBUCxDQUFMOztBQUNBLElBQUEsQ0FBSyxNQUFBLENBQU87RUFBQyxJQUFEO0VBQU0sSUFBTjtFQUFXLElBQVg7RUFBZ0IsSUFBaEI7RUFBcUIsR0FBckI7RUFBeUIsSUFBekI7RUFBOEIsSUFBOUI7Q0FBUCxDQUFMOztBQWpDQSIsInNvdXJjZXNDb250ZW50IjpbImVjaG8gPSBjb25zb2xlLmxvZ1xyXG5cclxuIyBzdGF0cyA9IChlbG9zKSAtPlxyXG4jIFx0c3VtbWEgPSAwXHJcbiMgXHRzdW1TcSA9IDBcclxuIyBcdGZvciBlbG8gaW4gZWxvc1xyXG4jIFx0XHRzdW1tYSArPSBlbG9cclxuIyBcdFx0c3VtU1EgKz0gZWxvICogZWxvXHJcblxyXG5zdGRkZXYgPSAoYXJyKSAtPlxyXG4gIG4gPSBhcnIubGVuZ3RoXHJcbiAgbWVhbiA9IGFyci5yZWR1Y2UoKChhLCBiKSAtPiBhICsgYiksIDApIC8gblxyXG4gIHZhcmlhbmNlID0gYXJyLnJlZHVjZSgoKGEsIGIpIC0+IGEgKyBNYXRoLnBvdyhiIC0gbWVhbiwgMikpLCAwKSAvIG5cclxuICBbbWVhbixNYXRoLnNxcnQgdmFyaWFuY2VdXHJcblxyXG5tZWRlbGRpZmYgPSAoZWxvcykgLT5cclxuICByZXN1bHQgPSBbXVxyXG4gIGZvciBlbG8gaW4gZWxvc1xyXG4gICAgc3VtbWEgPSAwXHJcbiAgICBmb3IgaXRlbSBpbiBlbG9zXHJcbiAgICAgIHN1bW1hICs9IGVsby1pdGVtXHJcbiAgICByZXN1bHQucHVzaCBNYXRoLnJvdW5kIHN1bW1hIC8gZWxvcy5sZW5ndGhcclxuICByZXN1bHRcclxuXHJcbmVjaG8gbWVkZWxkaWZmIFsxODEyLDE3NDIsMTczMiwxNzMwLDE3MjIsMTcxMiwxNzA1LDE3MDEsMTcwMCwxNjk5LDE2ODEsMTY1NF0gIyBLbGFzcyAxXHJcbmVjaG8gbWVkZWxkaWZmIFsxNjM3LDE2MzYsMTYzNiwxNjIxLDE2MTgsMTYxNywxNjA5LDE1OTIsMTU4NSwxNTg1LDE1ODAsMTYwMF0gIyBLbGFzcyAyXHJcbmVjaG8gbWVkZWxkaWZmIFsxODczLDE1NzQsMTU3NCwxNTY5LDE1NjksMTU1NCwxNTUxLDE1NDYsMTU0NCwxNTMxLDE1MjddICMgS2xhc3MgM1xyXG5cclxuXHJcbmVjaG8gc3RkZGV2IFswLjA1LDAuMDIsMC4wMiwwLjAyLDAuMDAsMC4wMSwwLjAxLDAuMDJdICMgZmFpcnBhaXIgcCAxODM1XHJcbmVjaG8gc3RkZGV2IFswLjQ3LDAuMjcsMC4wMSwwLjA1LDAuMDcsMC4xMCwwLjE2LDAuMTBdICMgc3dpc3MgICAgcFxyXG5cclxuZWNobyBzdGRkZXYgWzAsMC4wNywwLjExLDAuMiwwLjI0LDAuMjYsMC4zMywwLjM1XSAjIGZhaXJwYWlyIHAgMjQxNlxyXG5lY2hvIHN0ZGRldiBbMC4wNywwLjI0LDAuMjYsMC4zNSwwLjQsMC40MiwwLjQ3XSAjIHN3aXNzICAgIHBcclxuXHJcbiNlY2hvIHN0ZGRldiBbMTcwMSwxNzQyLDE3MzIsMTczMCwxNjgxLDE3MDUsMTgxMiwxNzIyLDE2OTksMTcxMiwxNjU0LDE3MDBdIl19
//# sourceURL=c:\github\2025\023-FairPair-vs-Swiss-Graphs\coffee\sketch.coffee