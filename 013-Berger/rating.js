// Generated by CoffeeScript 2.7.0
var echo, expected_score, extrapolate, performance_rating, summa;

echo = console.log;

summa = function(arr) {
  var i, item, len, res;
  res = 0;
  for (i = 0, len = arr.length; i < len; i++) {
    item = arr[i];
    res += item;
  }
  return res;
};

expected_score = function(ratings, own_rating) {
  var rating;
  return summa((function() {
    var i, len, results;
    results = [];
    for (i = 0, len = ratings.length; i < len; i++) {
      rating = ratings[i];
      results.push(1 / (1 + 10 ** ((rating - own_rating) / 400)));
    }
    return results;
  })());
};

performance_rating = function(pp, ratings) {
  var hi, lo, rating;
  lo = 0;
  hi = 4000;
  while (Math.abs(hi - lo) > 0.001) {
    rating = (lo + hi) / 2;
    if (pp > expected_score(ratings, rating)) {
      lo = rating;
    } else {
      hi = rating;
    }
  }
  return rating;
};


// Use two extreme values when calculating 0% or 100%
extrapolate = function(a0, b0, elos) {
  var a, b;
  a = performance_rating(a0, elos);
  b = performance_rating(b0, elos);
  return b + b - a;
};

export var performance = function(pp, elos) {
  var n;
  n = elos.length;
  if (n === 1) {
    if (pp === 0) {
      return extrapolate(0.50, 0.25, elos);
    }
    if (pp === n) {
      return extrapolate(0.50, 0.75, elos);
    }
  } else {
    if (pp === 0) {
      return extrapolate(1, 0.5, elos);
    }
    if (pp === n) {
      return extrapolate(n - 1, n - 0.5, elos);
    }
  }
  return performance_rating(pp, elos);
};

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmF0aW5nLmpzIiwic291cmNlUm9vdCI6IlxcIiwic291cmNlcyI6WyJyYXRpbmcuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxJQUFBLElBQUEsRUFBQSxjQUFBLEVBQUEsV0FBQSxFQUFBLGtCQUFBLEVBQUE7O0FBQUEsSUFBQSxHQUFPLE9BQU8sQ0FBQzs7QUFFZixLQUFBLEdBQVEsUUFBQSxDQUFDLEdBQUQsQ0FBQTtBQUNSLE1BQUEsQ0FBQSxFQUFBLElBQUEsRUFBQSxHQUFBLEVBQUE7RUFBQyxHQUFBLEdBQU07RUFDTixLQUFBLHFDQUFBOztJQUNDLEdBQUEsSUFBTztFQURSO1NBRUE7QUFKTzs7QUFNUixjQUFBLEdBQWlCLFFBQUEsQ0FBQyxPQUFELEVBQVUsVUFBVixDQUFBO0FBQXdCLE1BQUE7U0FBQyxLQUFBOztBQUFPO0lBQUEsS0FBQSx5Q0FBQTs7bUJBQUEsQ0FBQSxHQUFJLENBQUMsQ0FBQSxHQUFJLEVBQUEsSUFBSSxDQUFDLENBQUMsTUFBQSxHQUFTLFVBQVYsQ0FBQSxHQUF3QixHQUF6QixDQUFUO0lBQUosQ0FBQTs7TUFBUDtBQUF6Qjs7QUFFakIsa0JBQUEsR0FBcUIsUUFBQSxDQUFDLEVBQUQsRUFBSyxPQUFMLENBQUE7QUFDckIsTUFBQSxFQUFBLEVBQUEsRUFBQSxFQUFBO0VBQUMsRUFBQSxHQUFLO0VBQ0wsRUFBQSxHQUFLO0FBQ0wsU0FBTSxJQUFJLENBQUMsR0FBTCxDQUFTLEVBQUEsR0FBSyxFQUFkLENBQUEsR0FBb0IsS0FBMUI7SUFDQyxNQUFBLEdBQVMsQ0FBQyxFQUFBLEdBQUssRUFBTixDQUFBLEdBQVk7SUFDckIsSUFBRyxFQUFBLEdBQUssY0FBQSxDQUFlLE9BQWYsRUFBd0IsTUFBeEIsQ0FBUjtNQUNDLEVBQUEsR0FBSyxPQUROO0tBQUEsTUFBQTtNQUdDLEVBQUEsR0FBSyxPQUhOOztFQUZEO1NBTUE7QUFUb0IsRUFWckI7Ozs7QUFzQkEsV0FBQSxHQUFjLFFBQUEsQ0FBQyxFQUFELEVBQUssRUFBTCxFQUFTLElBQVQsQ0FBQTtBQUNkLE1BQUEsQ0FBQSxFQUFBO0VBQUMsQ0FBQSxHQUFJLGtCQUFBLENBQW1CLEVBQW5CLEVBQXNCLElBQXRCO0VBQ0osQ0FBQSxHQUFJLGtCQUFBLENBQW1CLEVBQW5CLEVBQXNCLElBQXRCO1NBQ0osQ0FBQSxHQUFJLENBQUosR0FBUTtBQUhLOztBQUtkLE9BQUEsSUFBTyxXQUFBLEdBQWMsUUFBQSxDQUFDLEVBQUQsRUFBSSxJQUFKLENBQUE7QUFDckIsTUFBQTtFQUFDLENBQUEsR0FBSSxJQUFJLENBQUM7RUFDVCxJQUFHLENBQUEsS0FBSyxDQUFSO0lBQ0MsSUFBRyxFQUFBLEtBQU0sQ0FBVDtBQUFnQixhQUFPLFdBQUEsQ0FBWSxJQUFaLEVBQWlCLElBQWpCLEVBQXNCLElBQXRCLEVBQXZCOztJQUNBLElBQUcsRUFBQSxLQUFNLENBQVQ7QUFBZ0IsYUFBTyxXQUFBLENBQVksSUFBWixFQUFpQixJQUFqQixFQUFzQixJQUF0QixFQUF2QjtLQUZEO0dBQUEsTUFBQTtJQUlDLElBQUcsRUFBQSxLQUFNLENBQVQ7QUFBZ0IsYUFBTyxXQUFBLENBQWMsQ0FBZCxFQUFrQixHQUFsQixFQUFzQixJQUF0QixFQUF2Qjs7SUFDQSxJQUFHLEVBQUEsS0FBTSxDQUFUO0FBQWdCLGFBQU8sV0FBQSxDQUFZLENBQUEsR0FBRSxDQUFkLEVBQWdCLENBQUEsR0FBRSxHQUFsQixFQUFzQixJQUF0QixFQUF2QjtLQUxEOztTQU1BLGtCQUFBLENBQW1CLEVBQW5CLEVBQXNCLElBQXRCO0FBUm9CIiwic291cmNlc0NvbnRlbnQiOlsiZWNobyA9IGNvbnNvbGUubG9nIFxyXG5cclxuc3VtbWEgPSAoYXJyKSAtPlxyXG5cdHJlcyA9IDBcclxuXHRmb3IgaXRlbSBpbiBhcnJcclxuXHRcdHJlcyArPSBpdGVtXHJcblx0cmVzXHJcblxyXG5leHBlY3RlZF9zY29yZSA9IChyYXRpbmdzLCBvd25fcmF0aW5nKSAtPiBzdW1tYSAoMSAvICgxICsgMTAqKigocmF0aW5nIC0gb3duX3JhdGluZykgLyA0MDApKSBmb3IgcmF0aW5nIGluIHJhdGluZ3MpXHJcblxyXG5wZXJmb3JtYW5jZV9yYXRpbmcgPSAocHAsIHJhdGluZ3MpIC0+XHJcblx0bG8gPSAwXHJcblx0aGkgPSA0MDAwXHJcblx0d2hpbGUgTWF0aC5hYnMoaGkgLSBsbykgPiAwLjAwMVxyXG5cdFx0cmF0aW5nID0gKGxvICsgaGkpIC8gMlxyXG5cdFx0aWYgcHAgPiBleHBlY3RlZF9zY29yZSByYXRpbmdzLCByYXRpbmdcclxuXHRcdFx0bG8gPSByYXRpbmdcclxuXHRcdGVsc2VcclxuXHRcdFx0aGkgPSByYXRpbmdcclxuXHRyYXRpbmdcclxuIFxyXG4jIFVzZSB0d28gZXh0cmVtZSB2YWx1ZXMgd2hlbiBjYWxjdWxhdGluZyAwJSBvciAxMDAlXHJcbmV4dHJhcG9sYXRlID0gKGEwLCBiMCwgZWxvcykgLT5cclxuXHRhID0gcGVyZm9ybWFuY2VfcmF0aW5nIGEwLGVsb3NcclxuXHRiID0gcGVyZm9ybWFuY2VfcmF0aW5nIGIwLGVsb3NcclxuXHRiICsgYiAtIGFcclxuXHJcbmV4cG9ydCBwZXJmb3JtYW5jZSA9IChwcCxlbG9zKSAtPiBcclxuXHRuID0gZWxvcy5sZW5ndGhcclxuXHRpZiBuID09IDFcclxuXHRcdGlmIHBwID09IDAgdGhlbiByZXR1cm4gZXh0cmFwb2xhdGUgMC41MCwwLjI1LGVsb3NcclxuXHRcdGlmIHBwID09IG4gdGhlbiByZXR1cm4gZXh0cmFwb2xhdGUgMC41MCwwLjc1LGVsb3NcclxuXHRlbHNlXHJcblx0XHRpZiBwcCA9PSAwIHRoZW4gcmV0dXJuIGV4dHJhcG9sYXRlICAgMSwgIDAuNSxlbG9zXHJcblx0XHRpZiBwcCA9PSBuIHRoZW4gcmV0dXJuIGV4dHJhcG9sYXRlIG4tMSxuLTAuNSxlbG9zXHJcblx0cGVyZm9ybWFuY2VfcmF0aW5nIHBwLGVsb3NcclxuIl19
//# sourceURL=c:\github\2025\013-Berger\rating.coffee